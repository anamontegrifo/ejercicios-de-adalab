{"ast":null,"code":"var _jsxFileName = \"/Users/Ana/Adalab/ejercicios-de-adalab/Mo\\u0301dulo 3 - React/React - leccio\\u0301n 3.1 /src/components/App.js\",\n    _s = $RefreshSig$();\n\n// Fichero src/components/App.js\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Creamos la constante de estado name con el valor inicial a string vacío\n  const [name, setName] = useState('');\n  const [apellido, SetApellido] = useState(''); // Creamos la función manejadora\n\n  const handleName = ev => {\n    // En la que guardamos el valor del input en name con setName\n    setName(ev.target.value);\n    SetApellido(ev.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Escribe un nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Mar\\xEDa Garc\\xEDa\",\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Mar\\xEDa Garc\\xEDa\",\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tu nombre es: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tu apellido es: \", apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"4ceOg2llgU9GDCM8eIyDzcFroh8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Ana/Adalab/ejercicios-de-adalab/Módulo 3 - React/React - lección 3.1 /src/components/App.js"],"names":["useState","App","name","setName","apellido","SetApellido","handleName","ev","target","value"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAHc,CAKd;;AACA,QAAMM,UAAU,GAAIC,EAAD,IAAQ;AAC1B;AACAJ,IAAAA,OAAO,CAACI,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAP;AACAJ,IAAAA,WAAW,CAACE,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAX;AACA,GAJD;;AAMA,sBACC;AAAA,2BACC;AAAA,8BACC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,EAAE,EAAC,MAHJ;AAIC,QAAA,WAAW,EAAC,oBAJb;AAKC,QAAA,QAAQ,EAAEH;AALX;AAAA;AAAA;AAAA;AAAA,cAJD,eAWC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,EAAE,EAAC,MAHJ;AAIC,QAAA,WAAW,EAAC,oBAJb;AAKC,QAAA,QAAQ,EAAEA;AALX;AAAA;AAAA;AAAA;AAAA,cAXD,eAoBC;AAAA,qCAAkBJ,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cApBD,eAqBC;AAAA,uCAAoBE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA;;GAvCQH,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["// Fichero src/components/App.js\nimport { useState } from 'react';\n\nfunction App() {\n\t// Creamos la constante de estado name con el valor inicial a string vacío\n\tconst [name, setName] = useState('');\n\tconst [apellido, SetApellido] = useState('');\n\n\t// Creamos la función manejadora\n\tconst handleName = (ev) => {\n\t\t// En la que guardamos el valor del input en name con setName\n\t\tsetName(ev.target.value);\n\t\tSetApellido(ev.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form>\n\t\t\t\t<label htmlFor=\"name\">Escribe un nombre:</label>\n\n\t\t\t\t{/* Creamos un evento de tipo change en este input que va a ser manejada por handleName */}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tplaceholder=\"María García\"\n\t\t\t\t\tonChange={handleName}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tplaceholder=\"María García\"\n\t\t\t\t\tonChange={handleName}\n\t\t\t\t/>\n\n\t\t\t\t{/* Usamos la constante name para pintarla en el HTML */}\n\t\t\t\t<p>Tu nombre es: {name}</p>\n\t\t\t\t<p>Tu apellido es: {apellido}</p>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}