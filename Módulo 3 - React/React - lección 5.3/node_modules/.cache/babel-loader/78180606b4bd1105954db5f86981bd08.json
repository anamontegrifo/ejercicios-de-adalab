{"ast":null,"code":"var _jsxFileName = \"/Users/Ana/Adalab/ejercicios-de-adalab/Mo\\u0301dulo 3 - React/React - leccio\\u0301n 5.3/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// Fichero src/components/App.js\nimport { useEffect, useState } from 'react'; // Importamos el servicio del local storage\n\nimport ls from '../services/localStorage'; // Si consoleas ls verás que es el objeto con las 4 funciones que hemos exportado en el servicio\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(ls);\n\nconst App = () => {\n  _s();\n\n  // Estados\n  // Obtenemos el nombre del local storage\n  // Si hay datos en el local storage esta función los devolverá\n  // Si no hay datos en el local storage esta función devolverá el segundo parámetro, es decir, un string vacío\n  const localStorageName = ls.get('name', ''); // Usamos localStorageName como parámetro de useState porque queremos que al arrancar la página name tenga lo que había en el local storage\n\n  const [name, setName] = useState(localStorageName); // Hacemos lo mismo con el email pero en una sola línea\n  // Programarlo en una sola línea nos gusta más\n\n  const [email, setEmail] = useState(ls.get('email', '')); // useEffect\n  // Usamos useEffect para guardar los datos en el local storage\n  // Cuando React renderice y pinte el HTML en la página ejecutará este useEffect\n\n  useEffect(() => {\n    // Guardamos el nombre y el email en el local storage\n    ls.set('name', name);\n    ls.set('email', email); // Este useEffect solo se ejecutará cuando cambie el nombre o el email\n\n    console.log('Ha cambiado el nombre o el email');\n  }, [name, email]); // Eventos\n\n  const reset = ev => {};\n\n  const handleName = ev => {\n    setName(ev.target.value);\n  };\n\n  const handleEmail = ev => {\n    setEmail(ev.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Usando el local storage:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Escribe tu nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Maricarmen\",\n        value: name,\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Escribe tu email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"mari.carmen@gmail.com\",\n        value: email,\n        onChange: handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tus datos son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu nombre es: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu email es: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eMDcYZaNEkJ4xfZbroEdTfSS5RI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Ana/Adalab/ejercicios-de-adalab/Módulo 3 - React/React - lección 5.3/src/components/App.js"],"names":["useEffect","useState","ls","console","log","App","localStorageName","get","name","setName","email","setEmail","set","reset","ev","handleName","target","value","handleEmail"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,EAAP,MAAe,0BAAf,C,CAEA;;;AACAC,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAEA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AACjB;AAEA;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGJ,EAAE,CAACK,GAAH,CAAO,MAAP,EAAe,EAAf,CAAzB,CANiB,CAOjB;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACK,gBAAD,CAAhC,CARiB,CAUjB;AACA;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACC,EAAE,CAACK,GAAH,CAAO,OAAP,EAAgB,EAAhB,CAAD,CAAlC,CAZiB,CAcjB;AAEA;AACA;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACf;AACAE,IAAAA,EAAE,CAACU,GAAH,CAAO,MAAP,EAAeJ,IAAf;AACAN,IAAAA,EAAE,CAACU,GAAH,CAAO,OAAP,EAAgBF,KAAhB,EAHe,CAKf;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,GAPQ,EAON,CAACI,IAAD,EAAOE,KAAP,CAPM,CAAT,CAlBiB,CA2BjB;;AAEA,QAAMG,KAAK,GAAIC,EAAD,IAAQ,CAAE,CAAxB;;AAEA,QAAMC,UAAU,GAAID,EAAD,IAAQ;AAC1BL,IAAAA,OAAO,CAACK,EAAE,CAACE,MAAH,CAAUC,KAAX,CAAP;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAIJ,EAAD,IAAQ;AAC3BH,IAAAA,QAAQ,CAACG,EAAE,CAACE,MAAH,CAAUC,KAAX,CAAR;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA,8BACC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,EAAE,EAAC,MAHJ;AAIC,QAAA,WAAW,EAAC,YAJb;AAKC,QAAA,KAAK,EAAET,IALR;AAMC,QAAA,QAAQ,EAAEO;AANX;AAAA;AAAA;AAAA;AAAA,cAFD,eAUC;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVD,eAWC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,EAAE,EAAC,OAHJ;AAIC,QAAA,WAAW,EAAC,uBAJb;AAKC,QAAA,KAAK,EAAEL,KALR;AAMC,QAAA,QAAQ,EAAEQ;AANX;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD,eAyBC;AAAA,mCAAkBV,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBD,eA0BC;AAAA,kCAAiBE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BD,eA2BC;AAAQ,MAAA,OAAO,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CAtED;;GAAMR,G;;KAAAA,G;AAwEN,eAAeA,GAAf","sourcesContent":["// Fichero src/components/App.js\n\nimport { useEffect, useState } from 'react';\n// Importamos el servicio del local storage\nimport ls from '../services/localStorage';\n\n// Si consoleas ls verás que es el objeto con las 4 funciones que hemos exportado en el servicio\nconsole.log(ls);\n\nconst App = () => {\n\t// Estados\n\n\t// Obtenemos el nombre del local storage\n\t// Si hay datos en el local storage esta función los devolverá\n\t// Si no hay datos en el local storage esta función devolverá el segundo parámetro, es decir, un string vacío\n\tconst localStorageName = ls.get('name', '');\n\t// Usamos localStorageName como parámetro de useState porque queremos que al arrancar la página name tenga lo que había en el local storage\n\tconst [name, setName] = useState(localStorageName);\n\n\t// Hacemos lo mismo con el email pero en una sola línea\n\t// Programarlo en una sola línea nos gusta más\n\tconst [email, setEmail] = useState(ls.get('email', ''));\n\n\t// useEffect\n\n\t// Usamos useEffect para guardar los datos en el local storage\n\t// Cuando React renderice y pinte el HTML en la página ejecutará este useEffect\n\tuseEffect(() => {\n\t\t// Guardamos el nombre y el email en el local storage\n\t\tls.set('name', name);\n\t\tls.set('email', email);\n\n\t\t// Este useEffect solo se ejecutará cuando cambie el nombre o el email\n\t\tconsole.log('Ha cambiado el nombre o el email');\n\t}, [name, email]);\n\n\t// Eventos\n\n\tconst reset = (ev) => {};\n\n\tconst handleName = (ev) => {\n\t\tsetName(ev.target.value);\n\t};\n\n\tconst handleEmail = (ev) => {\n\t\tsetEmail(ev.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Usando el local storage:</h1>\n\n\t\t\t<form>\n\t\t\t\t<label htmlFor=\"name\">Escribe tu nombre:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tplaceholder=\"Maricarmen\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={handleName}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"email\">Escribe tu email:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tplaceholder=\"mari.carmen@gmail.com\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={handleEmail}\n\t\t\t\t/>\n\t\t\t</form>\n\n\t\t\t<h2>Tus datos son:</h2>\n\t\t\t<p>Tu nombre es: {name}</p>\n\t\t\t<p>Tu email es: {email}</p>\n\t\t\t<button onClick={reset}>Reset</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}