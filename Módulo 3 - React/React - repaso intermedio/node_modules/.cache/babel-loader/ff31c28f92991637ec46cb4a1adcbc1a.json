{"ast":null,"code":"// Fichero src/services/local-storage.js\n// Función que obtiene una propiedad del local storage\n// Si esta propiedad no existe porque es la primera vez que la usuaria entra en la página la función devuelve el valor de defaultValue\n// Que esta función devuelva un valor por defecto es una cómoda manera de trabajar, así esta comprobación no la tenemos que hacer App.js\nconst get = (key, defaultValue) => {\n  const localStorageData = localStorage.getItem(key);\n\n  if (localStorageData === null) {\n    return defaultValue;\n  } else {\n    return JSON.parse(localStorageData);\n  }\n}; // Función que guarda una propiedad y su valor en el local storage\n\n\nconst set = (key, value) => {\n  const localStorageData = JSON.stringify(value);\n  localStorage.setItem(key, localStorageData);\n}; // Función que borra una propiedad del local storage\n\n\nconst remove = key => {\n  localStorage.removeItem(key);\n}; // Función que limpia todo el local storage\n\n\nconst clear = () => {\n  localStorage.clear();\n}; // Creamos un objeto temporal que es el que queremos exportar\n// Este objeto tiene la una propiedad get cuyo valor es la función get\n// Este objeto tiene la una propiedad set cuyo valor es la función set\n// Este objeto tiene la una propiedad remove cuyo valor es la función remove\n// Este objeto tiene la una propiedad clear cuyo valor es la función clear\n\n\nconst objectToExport = {\n  get: get,\n  set: set,\n  remove: remove,\n  clear: clear\n}; // Exportamos el objeto para que pueda ser usado desde App\n\nexport default objectToExport;","map":{"version":3,"sources":["/Users/Ana/Adalab/ejercicios-de-adalab/Módulo 3 - React/React - repaso intermedio/src/services/localStorage.js"],"names":["get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","value","stringify","setItem","remove","removeItem","clear","objectToExport"],"mappings":"AAAA;AAEA;AACA;AACA;AACA,MAAMA,GAAG,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAClC,QAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAzB;;AACA,MAAIE,gBAAgB,KAAK,IAAzB,EAA+B;AAC9B,WAAOD,YAAP;AACA,GAFD,MAEO;AACN,WAAOI,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAP;AACA;AACD,CAPD,C,CASA;;;AACA,MAAMK,GAAG,GAAG,CAACP,GAAD,EAAMQ,KAAN,KAAgB;AAC3B,QAAMN,gBAAgB,GAAGG,IAAI,CAACI,SAAL,CAAeD,KAAf,CAAzB;AACAL,EAAAA,YAAY,CAACO,OAAb,CAAqBV,GAArB,EAA0BE,gBAA1B;AACA,CAHD,C,CAKA;;;AACA,MAAMS,MAAM,GAAIX,GAAD,IAAS;AACvBG,EAAAA,YAAY,CAACS,UAAb,CAAwBZ,GAAxB;AACA,CAFD,C,CAIA;;;AACA,MAAMa,KAAK,GAAG,MAAM;AACnBV,EAAAA,YAAY,CAACU,KAAb;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG;AACtBf,EAAAA,GAAG,EAAEA,GADiB;AAEtBQ,EAAAA,GAAG,EAAEA,GAFiB;AAGtBI,EAAAA,MAAM,EAAEA,MAHc;AAItBE,EAAAA,KAAK,EAAEA;AAJe,CAAvB,C,CAOA;;AACA,eAAeC,cAAf","sourcesContent":["// Fichero src/services/local-storage.js\n\n// Función que obtiene una propiedad del local storage\n// Si esta propiedad no existe porque es la primera vez que la usuaria entra en la página la función devuelve el valor de defaultValue\n// Que esta función devuelva un valor por defecto es una cómoda manera de trabajar, así esta comprobación no la tenemos que hacer App.js\nconst get = (key, defaultValue) => {\n\tconst localStorageData = localStorage.getItem(key);\n\tif (localStorageData === null) {\n\t\treturn defaultValue;\n\t} else {\n\t\treturn JSON.parse(localStorageData);\n\t}\n};\n\n// Función que guarda una propiedad y su valor en el local storage\nconst set = (key, value) => {\n\tconst localStorageData = JSON.stringify(value);\n\tlocalStorage.setItem(key, localStorageData);\n};\n\n// Función que borra una propiedad del local storage\nconst remove = (key) => {\n\tlocalStorage.removeItem(key);\n};\n\n// Función que limpia todo el local storage\nconst clear = () => {\n\tlocalStorage.clear();\n};\n\n// Creamos un objeto temporal que es el que queremos exportar\n// Este objeto tiene la una propiedad get cuyo valor es la función get\n// Este objeto tiene la una propiedad set cuyo valor es la función set\n// Este objeto tiene la una propiedad remove cuyo valor es la función remove\n// Este objeto tiene la una propiedad clear cuyo valor es la función clear\nconst objectToExport = {\n\tget: get,\n\tset: set,\n\tremove: remove,\n\tclear: clear,\n};\n\n// Exportamos el objeto para que pueda ser usado desde App\nexport default objectToExport;\n"]},"metadata":{},"sourceType":"module"}