{"ast":null,"code":"var _jsxFileName = \"/Users/Ana/Adalab/ejercicios-de-adalab/Mo\\u0301dulo 3 - React/React - leccio\\u0301n 4.2/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// Fichero src/components/App.js\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Crearmos las series en el estado indicando el array inicial\n  const [series, setSeries] = useState([{\n    id: '123',\n    isFavorite: false,\n    name: 'Juego de tronos'\n  }, {\n    id: '456',\n    isFavorite: false,\n    name: 'Las chicas Gilmore'\n  }, {\n    id: '678',\n    isFavorite: false,\n    name: 'Gambita de Dama'\n  }]); // Función manejadora que se ejecuta cuando la usuaria pulsa en una serie\n\n  const handleFavorite = ev => {\n    // Obtenemos el id de la serie pintada. Este id lo estamos renderizando dentro del map\n    // Por cierto aquí solo puedo usar currentTarget y no target porque quiero leer el id de li escuchado\n    const clickedSerieId = ev.currentTarget.id; // Buscamos la serie pulsada\n\n    const foundSerie = series.find(serie => serie.id === clickedSerieId); // Invertimos la propiedad de serie pintada, si antes era false ahora es true y viceversa\n\n    foundSerie.isFavorite = !foundSerie.isFavorite; // Guardamos las series en el estado usando spread (lo explicamos más abajo)\n\n    setSeries([...series]);\n  };\n\n  const renderSeries = () => {\n    return series.map(serie => {\n      return (\n        /*#__PURE__*/\n        // Renderizamos cada serie añdiendo el atributo id\n        _jsxDEV(\"li\", {\n          id: serie.id,\n          onClick: handleFavorite,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: serie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Es mi serie favorita: \", serie.isFavorite ? 'Sí' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 6\n          }, this)]\n        }, serie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)\n      );\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de series favoritas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderSeries()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"NsMga8Y8/9Y7rcLtFN28XlUc6CY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Ana/Adalab/ejercicios-de-adalab/Módulo 3 - React/React - lección 4.2/src/components/App.js"],"names":["useState","App","series","setSeries","id","isFavorite","name","handleFavorite","ev","clickedSerieId","currentTarget","foundSerie","find","serie","renderSeries","map"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CACpC;AAAEI,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,UAAU,EAAE,KAAzB;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GADoC,EAEpC;AAAEF,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,UAAU,EAAE,KAAzB;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAFoC,EAGpC;AAAEF,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,UAAU,EAAE,KAAzB;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAHoC,CAAD,CAApC,CAFiB,CAQjB;;AACA,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC9B;AACA;AACA,UAAMC,cAAc,GAAGD,EAAE,CAACE,aAAH,CAAiBN,EAAxC,CAH8B,CAI9B;;AACA,UAAMO,UAAU,GAAGT,MAAM,CAACU,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACT,EAAN,KAAaK,cAApC,CAAnB,CAL8B,CAM9B;;AACAE,IAAAA,UAAU,CAACN,UAAX,GAAwB,CAACM,UAAU,CAACN,UAApC,CAP8B,CAQ9B;;AACAF,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACA,GAVD;;AAYA,QAAMY,YAAY,GAAG,MAAM;AAC1B,WAAOZ,MAAM,CAACa,GAAP,CAAYF,KAAD,IAAW;AAC5B;AAAA;AACC;AACA;AAAmB,UAAA,EAAE,EAAEA,KAAK,CAACT,EAA7B;AAAiC,UAAA,OAAO,EAAEG,cAA1C;AAAA,kCACC;AAAA,sBAAKM,KAAK,CAACP;AAAX;AAAA;AAAA;AAAA;AAAA,kBADD,eAGC;AAAA,iDAA0BO,KAAK,CAACR,UAAN,GAAmB,IAAnB,GAA0B,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA,WAASQ,KAAK,CAACT,EAAf;AAAA;AAAA;AAAA;AAAA;AAFD;AAQA,KATM,CAAP;AAUA,GAXD;;AAaA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAKU,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAxCD;;GAAMb,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["// Fichero src/components/App.js\nimport { useState } from 'react';\n\nconst App = () => {\n\t// Crearmos las series en el estado indicando el array inicial\n\tconst [series, setSeries] = useState([\n\t\t{ id: '123', isFavorite: false, name: 'Juego de tronos' },\n\t\t{ id: '456', isFavorite: false, name: 'Las chicas Gilmore' },\n\t\t{ id: '678', isFavorite: false, name: 'Gambita de Dama' },\n\t]);\n\n\t// Función manejadora que se ejecuta cuando la usuaria pulsa en una serie\n\tconst handleFavorite = (ev) => {\n\t\t// Obtenemos el id de la serie pintada. Este id lo estamos renderizando dentro del map\n\t\t// Por cierto aquí solo puedo usar currentTarget y no target porque quiero leer el id de li escuchado\n\t\tconst clickedSerieId = ev.currentTarget.id;\n\t\t// Buscamos la serie pulsada\n\t\tconst foundSerie = series.find((serie) => serie.id === clickedSerieId);\n\t\t// Invertimos la propiedad de serie pintada, si antes era false ahora es true y viceversa\n\t\tfoundSerie.isFavorite = !foundSerie.isFavorite;\n\t\t// Guardamos las series en el estado usando spread (lo explicamos más abajo)\n\t\tsetSeries([...series]);\n\t};\n\n\tconst renderSeries = () => {\n\t\treturn series.map((serie) => {\n\t\t\treturn (\n\t\t\t\t// Renderizamos cada serie añdiendo el atributo id\n\t\t\t\t<li key={serie.id} id={serie.id} onClick={handleFavorite}>\n\t\t\t\t\t<h2>{serie.name}</h2>\n\t\t\t\t\t{/* Pintamos si cada serie es favorita usando el atributo isFavorite */}\n\t\t\t\t\t<p>Es mi serie favorita: {serie.isFavorite ? 'Sí' : 'No'}</p>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Lista de series favoritas:</h1>\n\t\t\t<ul>{renderSeries()}</ul>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}