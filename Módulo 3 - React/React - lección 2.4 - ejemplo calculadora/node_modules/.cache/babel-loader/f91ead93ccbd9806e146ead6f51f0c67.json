{"ast":null,"code":"var _jsxFileName = \"/Users/Ana/Adalab/ejercicios-de-adalab/Mo\\u0301dulo 3 - React/React - leccio\\u0301n 2.4/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Creamos la constante de estado email y la función para modificarla setEmail.\n  // El valor inicial que va a tener email es un string vacío.\n  const [email, setEmail] = useState(''); // Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input.\n\n  const handleEmail = ev => {\n    // Cogemos el valor del input.\n    const inputValue = ev.target.value; // Ejecutamos la función setEmail para actualizar el valor del estado email.\n    // Cuando ejecutamos la función setEmail, React guarda el valor del input en la constante email y re-renderiza la página.\n    // Esta función no la hemos creado nosotras, nos la ha creado React al utilizar el useState.\n\n    setEmail(inputValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generador de emails:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Escribe un email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input-text\",\n          type: \"email\",\n          name: \"name\",\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu email es: \", email, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pulsa en \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `mailto:${email}`,\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this), \" para enviar un email.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Ana/Adalab/ejercicios-de-adalab/Módulo 3 - React/React - lección 2.4/src/components/App.js"],"names":["useState","App","email","setEmail","handleEmail","ev","inputValue","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAHc,CAKd;;AACA,QAAMI,WAAW,GAAIC,EAAD,IAAQ;AAC3B;AACA,UAAMC,UAAU,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAA7B,CAF2B,CAG3B;AACA;AACA;;AACAL,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACA,GAPD;;AAQA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BACC;AAAA,qDAGC;AACC,UAAA,SAAS,EAAC,kBADX;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,IAAI,EAAC,MAHN;AAIC,UAAA,QAAQ,EAAEF;AAJX;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAeC;AAAA,kCAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD,eAgBC;AAAA,2CAIU;AAAG,QAAA,IAAI,EAAG,UAASA,KAAM,EAAzB;AAAA,kBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJV;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n\t// Creamos la constante de estado email y la función para modificarla setEmail.\n\t// El valor inicial que va a tener email es un string vacío.\n\tconst [email, setEmail] = useState('');\n\n\t// Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input.\n\tconst handleEmail = (ev) => {\n\t\t// Cogemos el valor del input.\n\t\tconst inputValue = ev.target.value;\n\t\t// Ejecutamos la función setEmail para actualizar el valor del estado email.\n\t\t// Cuando ejecutamos la función setEmail, React guarda el valor del input en la constante email y re-renderiza la página.\n\t\t// Esta función no la hemos creado nosotras, nos la ha creado React al utilizar el useState.\n\t\tsetEmail(inputValue);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<h1>Generador de emails:</h1>\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\tEscribe un email:\n\t\t\t\t\t{/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleEmail. */}\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form__input-text\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonChange={handleEmail}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t\t{/* En esta línea usamos la constante email para pintar el HTML. */}\n\t\t\t<p>Tu email es: {email}.</p>\n\t\t\t<p>\n\t\t\t\t{/* En esta línea usamos la constante email para pintar la propiedad href del link. */}\n\t\t\t\t{/* Estamos interpolando para conseguir que el valor de href sea algo como mailto:maria@gmail.com. */}\n\t\t\t\t{/* También estamos usando la constante email para pintar el texto del link. */}\n\t\t\t\tPulsa en <a href={`mailto:${email}`}>{email}</a> para enviar un email.\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}